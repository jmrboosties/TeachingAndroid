/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package pl.polidea.coverflow;

public final class R {
    public static final class attr {
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int imageHeight=0x7f010001;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int imageReflectionRatio=0x7f010004;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int imageWidth=0x7f010000;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int reflectionGap=0x7f010003;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int withReflection=0x7f010002;
    }
    public static final class color {
        public static final int black=0x7f050000;
        public static final int green=0x7f050004;
        public static final int red=0x7f050005;
        public static final int sky_blue=0x7f050003;
        public static final int white=0x7f050001;
        public static final int yellow=0x7f050002;
    }
    public static final class drawable {
        public static final int bugs=0x7f020000;
        public static final int chuckecheese=0x7f020001;
        public static final int clippy=0x7f020002;
        public static final int duder=0x7f020003;
        public static final int ic_launcher=0x7f020004;
    }
    public static final class id {
        public static final int back_button=0x7f070002;
        public static final int button=0x7f070005;
        public static final int connect_button=0x7f070008;
        public static final int edit_text=0x7f070004;
        public static final int holy_shit_textview=0x7f070000;
        public static final int image_view=0x7f070003;
        public static final int player_button=0x7f070001;
        public static final int switch_screen_button=0x7f070006;
        public static final int web_response=0x7f070007;
    }
    public static final class layout {
        public static final int cover_flow=0x7f030000;
        public static final int new_layout=0x7f030001;
        public static final int ugly_layout=0x7f030002;
        public static final int web_layout=0x7f030003;
    }
    public static final class raw {
        public static final int onemoretime=0x7f040000;
    }
    public static final class string {
        public static final int app_name=0x7f060001;
        public static final int button_text=0x7f060004;
        public static final int connect=0x7f060008;
        public static final int get_liek_me=0x7f060002;
        public static final int hello=0x7f060000;
        public static final int holy_shit=0x7f060006;
        public static final int my_hint=0x7f060003;
        public static final int new_screen_button=0x7f060005;
        public static final int no_connection=0x7f060007;
    }
    public static final class styleable {
        /** Attributes that can be used with a CoverFlow.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #CoverFlow_imageHeight deal.with.it:imageHeight}</code></td><td></td></tr>
           <tr><td><code>{@link #CoverFlow_imageReflectionRatio deal.with.it:imageReflectionRatio}</code></td><td></td></tr>
           <tr><td><code>{@link #CoverFlow_imageWidth deal.with.it:imageWidth}</code></td><td></td></tr>
           <tr><td><code>{@link #CoverFlow_reflectionGap deal.with.it:reflectionGap}</code></td><td></td></tr>
           <tr><td><code>{@link #CoverFlow_withReflection deal.with.it:withReflection}</code></td><td></td></tr>
           </table>
           @see #CoverFlow_imageHeight
           @see #CoverFlow_imageReflectionRatio
           @see #CoverFlow_imageWidth
           @see #CoverFlow_reflectionGap
           @see #CoverFlow_withReflection
         */
        public static final int[] CoverFlow = {
            0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003,
            0x7f010004
        };
        /**
          <p>This symbol is the offset where the {@link deal.with.it.R.attr#imageHeight}
          attribute's value can be found in the {@link #CoverFlow} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:imageHeight
        */
        public static final int CoverFlow_imageHeight = 1;
        /**
          <p>This symbol is the offset where the {@link deal.with.it.R.attr#imageReflectionRatio}
          attribute's value can be found in the {@link #CoverFlow} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:imageReflectionRatio
        */
        public static final int CoverFlow_imageReflectionRatio = 4;
        /**
          <p>This symbol is the offset where the {@link deal.with.it.R.attr#imageWidth}
          attribute's value can be found in the {@link #CoverFlow} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:imageWidth
        */
        public static final int CoverFlow_imageWidth = 0;
        /**
          <p>This symbol is the offset where the {@link deal.with.it.R.attr#reflectionGap}
          attribute's value can be found in the {@link #CoverFlow} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:reflectionGap
        */
        public static final int CoverFlow_reflectionGap = 3;
        /**
          <p>This symbol is the offset where the {@link deal.with.it.R.attr#withReflection}
          attribute's value can be found in the {@link #CoverFlow} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:withReflection
        */
        public static final int CoverFlow_withReflection = 2;
    };
}
